{"version":3,"sources":["components/Card/Card.module.scss","components/Card/Card.jsx","components/LoginForm/LoginForm.module.scss","components/LoginForm/LoginForm.jsx","views/Login/Login.jsx"],"names":["module","exports","Card","children","className","s","card","LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","event","target","name","value","Error","performLogin","a","preventDefault","authOperations","login","form","onSubmit","label","type","onChange","required","button","Login","props","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","isCurrentUserRetreived","getIsCurrentUserRetreived","to","replace","Container"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,qB,8FCKVC,EAJF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OAAO,qBAAKC,UAAWC,IAAEC,KAAlB,SAAyBH,M,mBCFlCH,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,4B,uLCiE5EM,EA7DG,WAChB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAOMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MACF,IAAK,WACHL,EAAYK,GACZ,MACF,QACE,MAAM,IAAIC,MAAJ,iCAAoCF,MAI1CG,EAAY,uCAAG,WAAML,GAAN,iBAAAM,EAAA,sDACnBN,EAAMO,iBAEAZ,EAAQK,EAAMC,OAAON,MAAMQ,MAC3BN,EAAWG,EAAMC,OAAOJ,SAASM,MAEvCX,EAASgB,IAAeC,MAAM,CAAEd,QAAOE,cAzBvCD,EAAS,IACTE,EAAY,IAkBO,2CAAH,sDAWlB,OACE,8BACE,uBAAMV,UAAWC,IAAEqB,KAAMC,SAAUN,EAAnC,UACE,wBAAOjB,UAAWC,IAAEuB,MAApB,kBAEE,uBAAOC,KAAK,QAAQX,KAAK,QAAQC,MAAOR,EAAOmB,SAAUf,EAAcgB,UAAQ,OAEjF,wBAAO3B,UAAWC,IAAEuB,MAApB,qBAEE,uBACEC,KAAK,WACLX,KAAK,WACLC,MAAON,EACPiB,SAAUf,EACVgB,UAAQ,OAGZ,wBAAQ3B,UAAWC,IAAE2B,OAAQH,KAAK,SAAlC,yBC/BOI,EApBD,SAAAC,GACZ,IAAMC,EAAaC,YAAYC,IAAcC,eACvCC,EAAyBH,YAAYC,IAAcG,2BAEzD,OACE,mCACGL,GAAcI,EACb,cAAC,IAAD,CAAUE,GAAG,IAAIC,SAAS,IAE1B,eAACC,EAAA,EAAD,WACE,uCACA,cAACzC,EAAA,EAAD,UACE,cAAC,EAAD","file":"static/js/Login.0bedad53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35wN0\"};","import s from './Card.module.scss';\n\nconst Card = ({ children }) => {\n  return <div className={s.card}>{children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2VEPW\",\"label\":\"LoginForm_label__1CPQ9\",\"button\":\"LoginForm_button__o5J9-\"};","import s from './LoginForm.module.scss';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const resetFieldsToDefault = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        throw new Error(`Unsupported text field ${name}`);\n    }\n  };\n\n  const performLogin = async event => {\n    event.preventDefault();\n\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n\n    dispatch(authOperations.login({ email, password }));\n\n    resetFieldsToDefault();\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={performLogin}>\n        <label className={s.label}>\n          Email\n          <input type=\"email\" name=\"email\" value={email} onChange={handleChange} required />\n        </label>\n        <label className={s.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport Container from 'components/Container';\nimport Card from 'components/Card';\nimport LoginForm from 'components/LoginForm';\n\nconst Login = props => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const isCurrentUserRetreived = useSelector(authSelectors.getIsCurrentUserRetreived);\n\n  return (\n    <>\n      {isLoggedIn && isCurrentUserRetreived ? (\n        <Navigate to=\"/\" replace={true} />\n      ) : (\n        <Container>\n          <h1>Login</h1>\n          <Card>\n            <LoginForm />\n          </Card>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}