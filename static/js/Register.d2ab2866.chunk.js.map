{"version":3,"sources":["components/Card/Card.module.scss","components/Card/Card.jsx","components/RegisterForm/RegisterForm.module.scss","components/RegisterForm/RegisterForm.jsx","views/Register/Register.jsx"],"names":["module","exports","Card","children","className","s","card","RegisterForm","dispatch","useDispatch","useState","email","setEmail","name","setName","password","setPassword","handleChange","event","target","value","Error","form","onSubmit","preventDefault","authOperations","signup","label","type","onChange","required","pattern","title","button","Register","props","navigate","useNavigate","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","isCurrentUserRetreived","getIsCurrentUserRetreived","useEffect","replace","Container"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,qB,8FCKVC,EAJF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OAAO,qBAAKC,UAAWC,IAAEC,KAAlB,SAAyBH,M,mBCFlCH,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,4BAA4B,OAAS,+B,gKC8ElFM,EA1EM,WACnB,IAAMC,EAAWC,cAEjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAQMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,QACHD,EAASQ,GACT,MACF,IAAK,OACHN,EAAQM,GACR,MACF,IAAK,WACHJ,EAAYI,GACZ,MACF,QACE,MAAM,IAAIC,MAAJ,iCAAoCR,MAgBhD,OACE,8BACE,uBAAMT,UAAWC,IAAEiB,KAAMC,SAdR,SAAAL,GACnBA,EAAMM,iBAEN,IAAMX,EAAOK,EAAMC,OAAON,KAAKO,MACzBT,EAAQO,EAAMC,OAAOR,MAAMS,MAC3BL,EAAWG,EAAMC,OAAOJ,SAASK,MAEvCZ,EAASiB,IAAeC,OAAO,CAAEb,OAAMF,QAAOI,cA9B9CH,EAAS,IACTE,EAAQ,IACRE,EAAY,KAmCV,UACE,wBAAOZ,UAAWC,IAAEsB,MAApB,iBAEE,uBAAOC,KAAK,OAAOf,KAAK,OAAOO,MAAOP,EAAMgB,SAAUZ,EAAca,UAAQ,OAE9E,wBAAO1B,UAAWC,IAAEsB,MAApB,kBAEE,uBAAOC,KAAK,QAAQf,KAAK,QAAQO,MAAOT,EAAOkB,SAAUZ,EAAca,UAAQ,OAEjF,wBAAO1B,UAAWC,IAAEsB,MAApB,qBAEE,uBACEC,KAAK,WACLf,KAAK,WACLkB,QAAQ,UACRC,MAAM,4LACNZ,MAAOL,EACPc,SAAUZ,EACVa,UAAQ,OAGZ,wBAAQ1B,UAAWC,IAAE4B,OAAQL,KAAK,SAAlC,4BC5COM,EAnBE,SAAAC,GACf,IAAMC,EAAWC,cACXC,EAAaC,YAAYC,IAAcC,eACvCC,EAAyBH,YAAYC,IAAcG,2BAMzD,OAJAC,qBAAU,WACJN,GAAcI,GAAwBN,EAAS,IAAK,CAAES,SAAS,MAClE,CAACT,EAAUE,EAAYI,IAGxB,eAACI,EAAA,EAAD,WACE,0CACA,cAAC5C,EAAA,EAAD,UACE,cAAC,EAAD","file":"static/js/Register.d2ab2866.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__35wN0\"};","import s from './Card.module.scss';\n\nconst Card = ({ children }) => {\n  return <div className={s.card}>{children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterForm_form__3lgYM\",\"label\":\"RegisterForm_label__3Qq3L\",\"button\":\"RegisterForm_button__3VyJ2\"};","import s from './RegisterForm.module.scss';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const resetFieldsToDefault = () => {\n    setEmail('');\n    setName('');\n    setPassword('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'name':\n        setName(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        throw new Error(`Unsupported text field ${name}`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.target.name.value;\n    const email = event.target.email.value;\n    const password = event.target.password.value;\n\n    dispatch(authOperations.signup({ name, email, password }));\n\n    resetFieldsToDefault();\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} required />\n        </label>\n        <label className={s.label}>\n          Email\n          <input type=\"email\" name=\"email\" value={email} onChange={handleChange} required />\n        </label>\n        <label className={s.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            pattern=\"^.{7,}$\"\n            title=\"Минимальная длина пароля 7 символов\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport Container from 'components/Container';\nimport Card from 'components/Card';\nimport RegisterForm from 'components/RegisterForm';\n\nconst Register = props => {\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const isCurrentUserRetreived = useSelector(authSelectors.getIsCurrentUserRetreived);\n\n  useEffect(() => {\n    if (isLoggedIn && isCurrentUserRetreived) navigate('/', { replace: true });\n  }, [navigate, isLoggedIn, isCurrentUserRetreived]);\n\n  return (\n    <Container>\n      <h1>Register</h1>\n      <Card>\n        <RegisterForm />\n      </Card>\n    </Container>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}